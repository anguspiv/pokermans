### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Image information for display"""
type Image {
  """The Image description"""
  description: String

  """The Image encoding"""
  encoding: String

  """The Image filename"""
  filename: String

  """The Image filepath"""
  filepath: String

  """The Image ID"""
  id: String

  """The Image mimeType"""
  mimeType: String

  """The Image title"""
  title: String
}

"""Image Input"""
input ImageInput {
  """The Image ID"""
  id: String
}

type Mutation {
  """Create a new User"""
  createUser(input: UserInput): User

  """Delete a profile"""
  deleteProfile(input: ProfileInput): Profile

  """Delete a User"""
  deleteUser(input: UserInput): User

  """Update a profile"""
  updateProfile(input: ProfileInput): Profile

  """Update a User"""
  updateUser(input: UserInput): User

  """Upload an Image"""
  uploadImage(file: Upload): Image
}

"""User Profile information for display"""
type Profile {
  """A User Profile Avatar Image"""
  avatar: Image

  """The ID of the User Profile Avatar"""
  avatarId: String

  """A 250 character description of the User"""
  bio: String

  """The User Profile's First Name"""
  firstName: String

  """The Profile ID"""
  id: String

  """The User Profile's Last Name"""
  lastName: String

  """The User Profile's Nickname"""
  nickname: String

  """The Profiles User ID"""
  userId: String
}

"""Profile Input"""
input ProfileInput {
  """The ID of the User Profile Avatar"""
  avatarId: String

  """A 250 character description of the User"""
  bio: String

  """The User Profile's First Name"""
  firstName: String

  """The Profile ID"""
  id: String

  """The User Profile's Last Name"""
  lastName: String

  """The User Profile's Nickname"""
  nickname: String

  """The Profiles User ID"""
  userId: String
}

type Query {
  """Find an Image"""
  image(input: ImageInput): Image

  """Find a User's profile"""
  profile(input: ProfileInput): Profile

  """Find a list of User Profiles"""
  profiles(
    """The User Profile's First Name"""
    firstName: String

    """The User Profile's Last Name"""
    lastName: String

    """The number of results to return"""
    limit: Int = 10

    """The User Profile's Nickname"""
    nickname: String

    """The number of results to skip"""
    offset: Int = 0

    """The field to order by"""
    orderBy: String = "id"

    """The search term to search for"""
    searchTerm: String

    """The direction to sort the results"""
    sort: String = "asc"
  ): [Profile]!

  """Find a single user"""
  user(input: UserInput): User

  """Get a list of Users"""
  users(input: UserInput): [User]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  """The User's email"""
  email: String

  """The User's id"""
  id: String!

  """The User's image when using social accounts to register"""
  image: String

  """The User's full name"""
  name: String

  """The User's Profile"""
  profile: Profile
}

"""The User Input"""
input UserInput {
  """The User's email"""
  email: String

  """The User's id"""
  id: String

  """The User's image when using social accounts to register"""
  image: String

  """The User's full name"""
  name: String
}
